/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.ArmazenamentoController;
import Controller.ConnectionFactoryController;
import Util.DataComponent;
import Controller.EntradaStockItemController;
import Controller.FacturaController;
import Controller.ParamentroController;
import Controller.UsuarioController;
import Enum.TipoLog;
import Model.LicencaModel;
import Model.ParamentroModel;
import Model.UsuarioModel;
import Util.BackupAutomatico;
import Util.ConnectionFactory;
import Util.CopySecury;
import Util.InfoComputadorUtil;
import Util.LogUtil;
import Util.LoginUtil;
import java.awt.event.KeyEvent;

import java.io.IOException;
import java.io.StreamCorruptedException;
import java.sql.SQLException;
import java.time.LocalDate;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author celso & Emanuel
 */
public class LoginView extends javax.swing.JFrame {

    /**
     * Creates new form LoginView
     */
    private final String SENHA_CONFIG = "zetasoft@930";
    private final String senhaDefaultUser = "celso@zetasoft.com";
    public static UsuarioModel usuario = null;

    public LoginView() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        txtUsuario = new javax.swing.JTextField();
        txtSenha = new javax.swing.JPasswordField();
        btnEntrar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btnSair = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("M-REST");
        setIconImage(new ImageIcon(getClass().getResource("/IMAGUENS/icon.png")).getImage());
        setUndecorated(true);
        setResizable(false);

        jPanel2.setBackground(new java.awt.Color(51, 51, 51));

        txtUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUsuarioActionPerformed(evt);
            }
        });
        txtUsuario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtUsuarioKeyReleased(evt);
            }
        });

        txtSenha.setEchoChar('+');
        txtSenha.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSenhaKeyReleased(evt);
            }
        });

        btnEntrar.setBackground(new java.awt.Color(204, 0, 0));
        btnEntrar.setForeground(new java.awt.Color(255, 255, 255));
        btnEntrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGUENS/internal_24px.png"))); // NOI18N
        btnEntrar.setText("Entrar");
        btnEntrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEntrarActionPerformed(evt);
            }
        });

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGUENS/entarar 3.png"))); // NOI18N
        jLabel6.setText("Usu√°rio");
        jLabel6.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGUENS/senha 3.png"))); // NOI18N
        jLabel7.setLabelFor(txtSenha);
        jLabel7.setText("Senha");
        jLabel7.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        btnSair.setBackground(new java.awt.Color(204, 0, 0));
        btnSair.setForeground(new java.awt.Color(255, 255, 255));
        btnSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGUENS/login_rounded_up_filled_24px.png"))); // NOI18N
        btnSair.setText("Sair");
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGUENS/lks.png"))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtSenha, javax.swing.GroupLayout.DEFAULT_SIZE, 217, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(btnEntrar, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSair, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 702, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEntrar)
                    .addComponent(btnSair))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnEntrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEntrarActionPerformed
        // TODO add your handling code here:
       new Thread(){
           @Override
           public void run() {
               try {
                    login();
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
           }
       }.start();
       
    }//GEN-LAST:event_btnEntrarActionPerformed
    private boolean verificarInfoPC(LicencaModel modelo) {

//        try {
//            String hdSerial = InfoComputadorUtil.getHDSerial();
//           // String mac = InfoComputadorUtil.retornaMacAddress();
//            String motherboardSerial = InfoComputadorUtil.getMotherboardSerial();
//            String cpu = InfoComputadorUtil.getCPUSerial();
//
//            if (hdSerial.equals(modelo.getHdSerial())
//                    //  && mac.equals(modelo.getMacAddress())
//                    && motherboardSerial.equals(modelo.getMotherboardSerial())
//                    && cpu.equals(modelo.getcPUSerial())) {
//
//                return true;
//            }
//        } catch (IOException ex) {
//            Logger.getLogger(LoginView.class.getName()).log(Level.SEVERE, null, ex);
//        }
//        return false;
        return true;
    }

    private boolean verificaLicenca() {

        try {

            ArmazenamentoController<LicencaModel> ficheiro = new ArmazenamentoController<>("Licenca");
            LicencaModel modelo = ficheiro.getAll().get(0);

            String vectorData[] = modelo.getDataFimLicenca().split("-");
            String vectorDataActual[] = DataComponent.getData1().split("-");

            int anoActual = Integer.parseInt(vectorDataActual[0]);
            int mesActual = Integer.parseInt(vectorDataActual[1]);
            int diaActual = Integer.parseInt(vectorDataActual[2]);

            int anoLicenca = Integer.parseInt(vectorData[0]);
            int mesLicenca = Integer.parseInt(vectorData[1]);
            int diaLicenca = Integer.parseInt(vectorData[2]);

            if (anoActual == anoLicenca) {

                if (mesActual == mesLicenca) {

                    if (diaActual == diaLicenca) {
                        JOptionPane.showMessageDialog(this, "A licen√ßa do software expira a manh√£ .\n"
                                + "Entra em conctato com o fornecedor\n"
                                + " do software para activa√ß√£o da licen√ßa\nContacto: 938 393 669\nEmail:zetasoft100@gmail.com");
                        return verificarInfoPC(modelo);
                    } else if (diaActual > diaLicenca) {

                        JOptionPane.showMessageDialog(this, "A licen√ßa do software expiro.\n"
                                + "Entra em conctato com o fornecedor\n"
                                + " do software para activa√ß√£o da licen√ßa\nContacto: 938 393 669\nEmail:zetasoft100@gmail.com");
                        ficheiro.removerArquivo();
                        return false;
                    } else if (diaActual < diaLicenca) {
                        if ((diaLicenca - diaActual) >= 0 && diaLicenca - diaActual <= 7) {
                            JOptionPane.showMessageDialog(this, "A licen√ßa do software Vai Expirar daqui a " + (diaLicenca - diaActual) + " dia(s)\n"
                                    + "Entra em conctato com o fornecedor\n"
                                    + " do software para solicitar nova licen√ßa\nContacto: 938 393 669\nEmail:zetasoft100@gmail.com ");
                        }
                        return verificarInfoPC(modelo);
                    }
                } else if (mesActual < mesLicenca) {

                    return verificarInfoPC(modelo);
                } else {
                    ficheiro.removerArquivo();
                    return false;
                }
            } else if (anoActual < anoLicenca) {

                return verificarInfoPC(modelo);
            }

            JOptionPane.showMessageDialog(this, "A licen√ßa do software expiro.\n"
                    + "Entra em conctato com o fornecedor"
                    + " do software para activa√ß√£o da licen√ßa");
            ficheiro.removerArquivo();
            return false;

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "A licen√ßa do software Invalida.\n"
                    + "Foi Modificado o arquivo de licen√ßa"
                    + "Entra em conctato com o fornecedor"
                    + " do software para activa√ß√£o da licen√ßa");
        }
        return false;
    }

    public static boolean DataConforme() // verifica se a data actual √© maior ou igual que a data da ultima factura
    {
        FacturaController facturaController = new FacturaController();
        return DataComponent.compareDataLastFactura(facturaController.getDataLastFactura());

    }

    private void login() {

    
        if (String.valueOf(txtSenha.getPassword()).equals(SENHA_CONFIG)) {

            new ConfigView().setVisible(true);

        } else {

            if (DataConforme()) {
                if (verificaLicenca()) {
                    UsuarioModel modelo = new UsuarioModel(txtUsuario.getText(),
                            String.valueOf(txtSenha.getPassword()));

                    if (!modelo.isUsuarioEmpty()) {
                            
                        try {

                            UsuarioController controller = new UsuarioController();
                            UsuarioModel usuarioSystem = controller.getUsuario(modelo);
                            if (usuarioSystem != null) {
                                usuario = usuarioSystem;
                                //backup();
                                if (usuarioSystem.isNewAcesso()) {
                                    this.dispose();
                                    new StatusAcessoView(usuarioSystem).setVisible(true);
                                } else {
                                    LoginUtil.loginAcesso(usuarioSystem, this);
                                }

                            } else {
                                JOptionPane.showMessageDialog(this, "Usuario ou senha esta incorrecto");
                            }

                        } catch (SQLException ex) {
                            Logger.getLogger(LoginView.class.getName()).log(Level.SEVERE, null, ex);

                        } catch (ClassNotFoundException ex) {
                            Logger.getLogger(LoginView.class.getName()).log(Level.SEVERE, null, ex);
                        }

                    } else {
                        JOptionPane.showMessageDialog(this, "Preencha o espaco em branco");
                    }
                }
            } else {
                JOptionPane.showMessageDialog(this, "Acerte a data do seu Computador");
            }
        }
        LogUtil.log.salvarLog(TipoLog.LOGIN, "Acesso ao Sistema ("+txtUsuario.getText()+")");
    }

    private void backup() {

        // TODO add your handling code here:
//            CopySecury.backup();
        ParamentroController controller = new ParamentroController();
        ParamentroModel modelo = controller.getById(9);

        if (modelo.getValor() == 1) {
            new BackupAutomatico().run();
        }

    }
    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        // TODO add your handling code here:
        LogUtil.log.salvarLog(TipoLog.LOGIN, "Saiu do Sistem ("+txtUsuario.getText()+")");
        new Thread(){
           @Override
           public void run() {
               try {
                   backup();
                   LogUtil.log.salvarLog(TipoLog.LOGIN, "Acesso ao Sistema ("+txtUsuario.getText()+")");
                   System.exit(0);
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
           }
       }.start();
        
        System.exit(0);
        
    }//GEN-LAST:event_btnSairActionPerformed

    private void txtSenhaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSenhaKeyReleased
        // TODO add your handling code here:

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            new Thread(){
                @Override
                public void run() {
                    try {
                         login();
                     } catch (Exception ex) {
                         ex.printStackTrace();
                     }
                }
            }.start();
        }
    }//GEN-LAST:event_txtSenhaKeyReleased

    private void txtUsuarioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUsuarioKeyReleased
        // TODO add your handling code here:

         if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            new Thread(){
                @Override
                public void run() {
                    try {
                         login();
                     } catch (Exception ex) {
                         ex.printStackTrace();
                     }
                }
            }.start();
        }
    }//GEN-LAST:event_txtUsuarioKeyReleased

    private void txtUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUsuarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUsuarioActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ConnectionFactoryController conexao = new ConnectionFactoryController();
                conexao.getConection();
                new LoginView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEntrar;
    private javax.swing.JButton btnSair;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPasswordField txtSenha;
    private javax.swing.JTextField txtUsuario;
    // End of variables declaration//GEN-END:variables
}
